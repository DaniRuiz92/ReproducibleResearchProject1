setwd("/media/daniel/Datos/Dropbox/DataScience/Reproducible Research/Week 2/CourseProject1")
dataActivity <- read.csv("activity.csv", header=T, sep=",")
summary(dataActivity)
# Histogram of the total number of steps taken each day
dataTotal <- aggregate(dataActivity$steps, by=list(dataActivity$date),FUN=sum,na.rm=TRUE)
names(dataTotal) <- c("date","total")
hist(dataTotal$total,breaks = 10)
# Mean and median number of steps taken each day
dataMean <- aggregate(dataActivity$steps, by=list(dataActivity$date),FUN=mean,na.rm=TRUE)
names(dataMean) <- c("dates", "mean")
dataMedian <- aggregate(dataActivity$steps, by=list(dataActivity$date),FUN=median,na.rm=TRUE)
names(dataMedian) <- c("dates", "median")
# Time series plot of the average number of steps taken
plot(y = dataMean$steps,x = dataMean$date)
plot(y = dataMean$mean,x = dataMean$date)
dataAverage <- aggregate(dataActivity$steps, by=list(dataActivity$interval),FUN=mean,na.rm=TRUE)
names(dataAverage) <- c("interval", "average")
max(dataAverage$average)
dataAverage(:,which.max(dataAverage$average))
dataAverage(,which.max(dataAverage$average))
dataAverage[,which.max(dataAverage$average)]
which.max(dataAverage$average)
dataAverage[which.max(dataAverage$average)]
dataAverage[,which.max(dataAverage$average)]
dataAverage[which.max(dataAverage$average),]
plot(y = dataAverage$average, x = dataAverage$interval)
library(ggplot)
plot(y = dataMean$mean,x = dataMean$date,type="l", xlab="Interval [minutes]",
ylab="Average number of steps",
main="Time-series of the average number of steps per intervals\n(NA removed)")
plot(y = dataMean$mean,x = dataMean$date,type="l", lwd=2,  xlab="Interval [minutes]",
ylab="Average number of steps",
main="Time-series of the average number of steps per intervals\n(NA removed)")
# Time series plot of the average number of steps taken
plot(y = dataMean$mean,x = dataMean$date,type="l", lwd=2,  xlab="Interval [minutes]",
ylab="Average number of steps",
main="Time-series of the average number of steps per intervals\n(NA removed)")
plot(y = dataAverage$average, x = dataAverage$interval,type="l", lwd=2,  xlab="Interval [minutes]",
ylab="Average number of steps",
main="Time-series of the average number of steps per intervals\n(NA removed)"))
plot(y = dataAverage$average, x = dataAverage$interval,type="l", lwd=2,  xlab="Interval [minutes]",
ylab="Average number of steps",
main="Time-series of the average number of steps per intervals\n(NA removed)"))
plot(y = dataAverage$average, x = dataAverage$interval,type="l", lwd=2,  xlab="Interval [minutes]",
ylab="Average number of steps",
main="Time-series of the average number of steps per intervals\n(NA removed)")
# Time series plot of the average number of steps taken
plot(y = dataMean$mean,x = dataMean$date,type="l", lwd=2,  xlab="Interval [minutes]",
ylab="Average number of steps",
main="Time-series of the average number of steps per intervals\n(NA removed)")
plot(y = dataAverage$average, x = dataAverage$interval,type="l", lwd=2,  xlab="Interval [minutes]",
ylab="Average number of steps",
main="Time-series of the average number of steps per intervals\n(NA removed)")
dataAverage[which.max(dataAverage$average),]
plot(y = dataAverage$average,
x = dataAverage$interval,
type="l",
lwd=2,
xlab="Interval [minutes]",
ylab="Average number of steps",
main="Average number of steps per intervals")
# Time series plot of the average number of steps taken
plot(y = dataMean$mean,
x = dataMean$date,
type="l",
lwd=2,
xlab="Date",
ylab="Average number of steps",
main="Average number of steps per day")
# The 5-minute interval that, on average, contains the maximum number of steps
dataAverage <- aggregate(dataActivity$steps, by=list(dataActivity$interval),FUN=mean,na.rm=TRUE)
names(dataAverage) <- c("interval", "average")
plot(y = dataAverage$average,
x = dataAverage$interval,
type="l",
lwd=2,
xlab="Interval [minutes]",
ylab="Average number of steps",
main="Average number of steps per intervals")
par(mfcol = c(2, 1)) # by rows
plot(y = dataMean$mean,
x = dataMean$date,
type="l",
lwd=2,
xlab="Date",
ylab="Average number of steps",
main="Average number of steps per day")
# The 5-minute interval that, on average, contains the maximum number of steps
dataAverage <- aggregate(dataActivity$steps, by=list(dataActivity$interval),FUN=mean,na.rm=TRUE)
names(dataAverage) <- c("interval", "average")
plot(y = dataAverage$average,
x = dataAverage$interval,
type="l",
lwd=2,
xlab="Interval [minutes]",
ylab="Average number of steps",
main="Average number of steps per intervals")
par(mfcol = c(1, 2)) # by rows
plot(y = dataMean$mean,
x = dataMean$date,
type="l",
lwd=2,
xlab="Date",
ylab="Average number of steps",
main="Average number of steps per day")
# The 5-minute interval that, on average, contains the maximum number of steps
dataAverage <- aggregate(dataActivity$steps, by=list(dataActivity$interval),FUN=mean,na.rm=TRUE)
names(dataAverage) <- c("interval", "average")
plot(y = dataAverage$average,
x = dataAverage$interval,
type="l",
lwd=2,
xlab="Interval [minutes]",
ylab="Average number of steps",
main="Average number of steps per intervals")
dataAverage[which.max(dataAverage$average),]
View(dataActivity)
par
help par
par doc
doc par
